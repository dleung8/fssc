VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "clsTokenizer"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Option Explicit

Private FileNum As Integer
Private Tokens(255) As String
Private TokenCount As Byte
Private Pointer As Byte

Public M98toBGLSkip As Boolean

Public Property Let Filename(ByVal File As String)
  Close #FileNum
  FileNum = FreeFile
  Open File For Input As #FileNum
  Erase Tokens
  Pointer = 1
  GetMoreTokens
End Property

Private Sub GetMoreTokens()
  Dim LineStr As String, _
    Temp As String, Temp2 As String, _
    Pos As Integer, Pos2 As Integer
  Dim I As Integer, OldCount As Integer
  Dim Toks() As String
  
  LineInputEx FileNum, LineStr
  Temp = LineStr
  
  ' Save processing time if developers insert this line
  If Left$(LineStr, 10) = ";EndPoints" Then
    Seek #FileNum, LOF(FileNum) + 1
    ReDim Toks(0)
    Toks(0) = " "
    GoTo Parser
  End If
  
  ' Get rid of comments
  If InStr(LineStr, "; Generated by M98toBGL") > 0 And InStr(LineStr, "Trevor de Stigter") > 0 Then
    M98toBGLSkip = True
  End If
  
  Pos = InStr(Temp, ";")
  If Pos > 0 Then Temp = Left$(Temp, Pos - 1)
  Pos = InStr(Temp, "//")
  If Pos > 0 Then Temp = Left$(Temp, Pos - 1)
  Pos = InStr(Temp, "/*")
  If Pos > 0 Then
    Temp2 = Left$(Temp, Pos - 1)
    Temp = Mid$(Temp, Pos + 2)
    Do
      Pos = InStr(Temp, "*/")
      If Pos > 0 Then
        Temp2 = Temp2 & " " & Mid$(Temp, Pos + 2)
        Exit Do
      End If
      LineInputEx FileNum, Temp
    Loop Until EOF(FileNum)
    Temp = Temp2
  End If
  
  Do
    Pos = InStr(Temp, "[")
    If Pos > 0 Then
      Pos2 = InStr(Pos, Temp, "]")
      Temp = Left$(Temp, Pos - 1) & " @@" & Replace$(Mid$(Temp, Pos + 1, Pos2 - Pos - 1), " ", ",") & " " & Mid$(Temp, Pos2 + 1)
    End If
  Loop Until Pos = 0
  
  ' Delete spaces between Statement and Left Parenthesis
  ' Makes things easier later on
  Temp = Replace(Temp, " (", "(")
  
  ' Add space between Left Parenthesis and first argument
  ' Makes things easier later on
  Temp = Replace(Temp, "(", "( ")
  
  ' Add space between last argument and Right Parenthesis
  ' Makes things easier later on
  Temp = Replace(Temp, ")", " )")

  ' Delete tabs
  Temp = Replace(Temp, vbTab, " ")
  
  Toks = Split(Temp, " ")
  
Parser:
  OldCount = TokenCount
  For I = 0 To UBound(Toks)
    If Toks(I) <> "" Then
      If TokenCount = 255 Then
        TokenCount = 0
      Else
        TokenCount = TokenCount + 1
      End If
      Tokens(TokenCount) = Toks(I)
    End If
  Next I
  
  If UBound(Toks) = -1 Or OldCount = TokenCount Then
    If Not EOF(FileNum) Then
      GetMoreTokens
    End If
  End If
End Sub

Public Property Get HasMoreTokens() As Boolean
  HasMoreTokens = (Pointer <> TokenCount) Or (Not EOF(FileNum))
End Property

Public Sub SetEnd()
  Seek #FileNum, LOF(FileNum) + 1
End Sub

Public Property Get Token(Optional ExpandExpressions As Boolean)
  Token = Tokens(Pointer)
  If Pointer = TokenCount Then GetMoreTokens
  
  If Pointer = 255 Then
    Pointer = 0
  Else
    Pointer = Pointer + 1
  End If
  If Left$(Token, 2) = "@@" Then
    If ExpandExpressions Then
      Token = Replace(Mid$(Token, 3), ",", " ")
    Else
      Token = "0"
    End If
  End If
End Property

Private Sub Class_Terminate()
  Close #FileNum
End Sub
